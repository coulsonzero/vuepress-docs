import{e as n}from"./app.7f8da8b8.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},e=n(`<h1 id="swift" tabindex="-1"><a class="header-anchor" href="#swift" aria-hidden="true">#</a> Swift</h1><p>[TOC]</p><p>Swift is a type safe language</p><hr><h2 id="comments" tabindex="-1"><a class="header-anchor" href="#comments" aria-hidden="true">#</a> Comments</h2><div class="language-Swift ext-Swift line-numbers-mode"><pre class="language-Swift"><code>// This is a Comment
/* This is a comment */
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="opeartor" tabindex="-1"><a class="header-anchor" href="#opeartor" aria-hidden="true">#</a> Opeartor</h2><div class="language-Swift ext-Swift line-numbers-mode"><pre class="language-Swift"><code>+  -  *  /  %
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr><h2 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> Output</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;name: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">myVariable</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> variables</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>num <span class="token operator">=</span> <span class="token number">42</span>                <span class="token comment">// variable</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">42</span>            <span class="token comment">// variable can be changed</span>
<span class="token keyword">let</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment">// constant can never be changed</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="type-annotations" tabindex="-1"><a class="header-anchor" href="#type-annotations" aria-hidden="true">#</a> Type Annotations</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Int
Double &amp; Float
Bool
String
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-Swift ext-Swift line-numbers-mode"><pre class="language-Swift"><code>let num = 42        // Integer
let pi = 3.14159    // Double
let text = &quot;Hello&quot;  // String
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-Swift ext-Swift line-numbers-mode"><pre class="language-Swift"><code>var message = String
message = &quot;Hello&quot;

var red, green, blue : Double
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,17);function t(r,i){return e}var o=a(s,[["render",t]]);export{o as default};
